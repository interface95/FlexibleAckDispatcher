syntax = "proto3";

package FlexibleAckDispatcher.Remote;

option csharp_namespace = "InMemoryWorkerBalancer.Remote.Protos";

service WorkerHub {
  rpc Register (RegisterRequest) returns (RegisterReply);
  rpc Subscribe (SubscribeRequest) returns (stream DispatcherMessage);
  rpc Ack (AckRequest) returns (AckReply);
  rpc Nack (NackRequest) returns (AckReply);
  rpc Heartbeat (HeartbeatRequest) returns (HeartbeatReply);
}

message RegisterRequest {
  string worker_name = 1;
  int32 concurrency_limit = 2;
  int32 prefetch = 3;
  map<string, string> metadata = 4;
}

message RegisterReply {
  int32 worker_id = 1;
}

message SubscribeRequest {
  int32 worker_id = 1;
}

message DispatcherMessage {
  oneof payload {
    TaskMessage task = 1;
    StopCommand stop = 2;
  }
}

message TaskMessage {
  int64 delivery_tag = 1;
  string message_type = 2;
  bytes payload = 3;
  map<string, string> headers = 4;
}

message AckRequest {
  int64 delivery_tag = 1;
  int32 worker_id = 2;
}

message NackRequest {
  int64 delivery_tag = 1;
  bool requeue = 2;
  string reason = 3;
  int32 worker_id = 4;
}

message AckReply {}

message HeartbeatRequest {
  int32 worker_id = 1;
  int64 ticks = 2;
}

message HeartbeatReply {}

message StopCommand {
  string reason = 1;
}

