name: CI Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read
  actions: write

env:
  DOTNET_VERSION: '9.0.x'
  SOLUTION_FILE: 'FlexibleAckDispatcher.sln'
  PREVIEW_VERSION_PREFIX: '1.0.0-preview'
  PROJECTS: |
    src/FlexibleAckDispatcher.Abstractions/FlexibleAckDispatcher.Abstractions.csproj
    src/FlexibleAckDispatcher.GrpcContracts/FlexibleAckDispatcher.GrpcContracts.csproj
    src/FlexibleAckDispatcher.GrpcServer/FlexibleAckDispatcher.GrpcServer.csproj
    src/FlexibleAckDispatcher.GrpcClient/FlexibleAckDispatcher.GrpcClient.csproj
    src/FlexibleAckDispatcher.InMemory.Core/FlexibleAckDispatcher.InMemory.Core.csproj
    src/FlexibleAckDispatcher.InMemory.Remote/FlexibleAckDispatcher.InMemory.Remote.csproj

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet: ['8.0.x', '9.0.x']
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET ${{ matrix.dotnet }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet }}

    - name: Display .NET info
      run: dotnet --info

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Build
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

    - name: Run tests
      run: dotnet test ${{ env.SOLUTION_FILE }} --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.dotnet }}
        path: '**/test-results.trx'
        retention-days: 7

  pack:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Build
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

    - name: Pack (preview)
      run: |
        mkdir -p ./nupkg
        VERSION=${{ env.PREVIEW_VERSION_PREFIX }}.${{ github.run_number }}
        echo "Packing preview packages (${VERSION})"
        while IFS= read -r project; do
          echo " - $project"
          dotnet pack "$project" \
          --configuration Release \
          --no-build \
          --output ./nupkg \
            /p:PackageVersion=${VERSION}
        done <<< "${{ env.PROJECTS }}"

    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuget-preview-package
        path: ./nupkg/*.nupkg
        retention-days: 7

